{
  "openapi": "3.0.3",
  "info": {
    "title": "Gateway API",
    "description": "API for Gateway",
    "version": "1.2.0"
  },
  "servers": [
    {
      "url": "https://app.for4payments.com.br/api/v1"
    }
  ],
  "paths": {
    "/auth.login": {
      "post": {
        "operationId": "auth-login",
        "summary": "Login as an existing user",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth.loginCustomer": {
      "post": {
        "operationId": "auth-loginCustomer",
        "summary": "Login as a customer",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "document": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "document"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth.register": {
      "post": {
        "operationId": "auth-register",
        "summary": "Register one user",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "document": {
                    "type": "string"
                  },
                  "terms": {
                    "type": "boolean"
                  },
                  "managerId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "email",
                  "name",
                  "password",
                  "document",
                  "terms",
                  "managerId",
                  "phone"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth.recoverPassword": {
      "post": {
        "operationId": "auth-recoverPassword",
        "summary": "Recover password",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth.recoverPasswordConfirm": {
      "post": {
        "operationId": "auth-recoverPasswordConfirm",
        "summary": "Confirm a password recover",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "token",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth.changePassword": {
      "post": {
        "operationId": "auth-changePassword",
        "summary": "Change the user password",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "password",
                  "newPassword"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth.apiKeyAdmin": {
      "post": {
        "operationId": "auth-apiKeyAdmin",
        "summary": "Login with admin API token",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiKey": {
                    "type": "string"
                  }
                },
                "required": [
                  "apiKey"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth.apiKeySeller": {
      "post": {
        "operationId": "auth-apiKeySeller",
        "summary": "Login with seller API token",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiKey": {
                    "type": "string"
                  }
                },
                "required": [
                  "apiKey"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/user.me": {
      "get": {
        "operationId": "user-me",
        "summary": "Get user info",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "document": {
                      "type": "string"
                    },
                    "documentType": {
                      "type": "string",
                      "enum": [
                        "CPF",
                        "CNPJ"
                      ]
                    },
                    "image": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "bannedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "creditCardEnabled": {
                      "type": "boolean"
                    },
                    "pixEnabled": {
                      "type": "boolean"
                    },
                    "billetEnabled": {
                      "type": "boolean"
                    },
                    "taxPix": {
                      "type": "number"
                    },
                    "taxBillet": {
                      "type": "number"
                    },
                    "taxCreditCard": {
                      "type": "number"
                    },
                    "taxAnticipation": {
                      "type": "number"
                    },
                    "withdrawFee": {
                      "type": "number"
                    },
                    "transactionFee": {
                      "type": "number"
                    },
                    "transactionFeeBillet": {
                      "type": "number"
                    },
                    "transactionFeeCreditCard": {
                      "type": "number"
                    },
                    "garanteeTax": {
                      "type": "number"
                    },
                    "garanteeTaxCreditCard": {
                      "type": "number"
                    },
                    "addressId": {
                      "type": "string",
                      "nullable": true
                    },
                    "checkedDocument": {
                      "type": "string",
                      "enum": [
                        "CHECKED",
                        "REJECTED",
                        "PENDING",
                        "NONE"
                      ]
                    },
                    "totalAmount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "name",
                    "document",
                    "documentType",
                    "image",
                    "phone",
                    "createdAt",
                    "updatedAt",
                    "bannedAt",
                    "creditCardEnabled",
                    "pixEnabled",
                    "billetEnabled",
                    "taxPix",
                    "taxBillet",
                    "taxCreditCard",
                    "taxAnticipation",
                    "withdrawFee",
                    "transactionFee",
                    "transactionFeeBillet",
                    "transactionFeeCreditCard",
                    "garanteeTax",
                    "garanteeTaxCreditCard",
                    "addressId",
                    "checkedDocument",
                    "totalAmount"
                  ],
                  "additionalProperties": false,
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/user.profile": {
      "get": {
        "operationId": "user-profile",
        "summary": "Get user profile info",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "checkedDocument": {
                      "type": "string",
                      "enum": [
                        "CHECKED",
                        "PENDING",
                        "REJECTED",
                        "NONE"
                      ]
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string",
                          "nullable": true
                        },
                        "district": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "id",
                        "zipcode",
                        "street",
                        "number",
                        "complement",
                        "district",
                        "city",
                        "state",
                        "createdAt",
                        "updatedAt"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "document": {
                      "type": "string"
                    },
                    "documentType": {
                      "type": "string",
                      "enum": [
                        "CPF",
                        "CNPJ"
                      ]
                    },
                    "image": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "rejectedReason": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "name",
                    "checkedDocument",
                    "address",
                    "document",
                    "documentType",
                    "image",
                    "phone",
                    "createdAt",
                    "updatedAt",
                    "rejectedReason"
                  ],
                  "additionalProperties": false,
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/user.updateProfile": {
      "post": {
        "operationId": "user-updateProfile",
        "summary": "Update user info",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "zipcode": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number": {
                        "type": "string"
                      },
                      "complement": {
                        "type": "string",
                        "nullable": true
                      },
                      "district": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "zipcode",
                      "street",
                      "number",
                      "complement",
                      "district",
                      "city",
                      "state"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "phone"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/user.uploadImage": {
      "post": {
        "operationId": "user-uploadImage",
        "summary": "Upload user image",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string"
                  },
                  "fileType": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileType"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "signedUrl": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "signedUrl",
                    "imageUrl"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/user.listApiKeys": {
      "get": {
        "operationId": "user-listApiKeys",
        "summary": "Update user info",
        "tags": [
          "user"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "secretKey": {
                            "type": "string"
                          },
                          "publicKey": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "secretKey",
                          "publicKey",
                          "userId",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "result",
                    "totalCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/user.createApiKey": {
      "post": {
        "operationId": "user-createApiKey",
        "summary": "Create one seller API key.",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/user.deleteApiKey": {
      "post": {
        "operationId": "user-deleteApiKey",
        "summary": "Delete API key.",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "secretKey": {
                    "type": "string"
                  }
                },
                "required": [
                  "secretKey"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/user.getProducerInfo": {
      "get": {
        "operationId": "user-getProducerInfo",
        "summary": "Get producer info.",
        "tags": [
          "user"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "document": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string",
                          "nullable": true
                        },
                        "district": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "id",
                        "zipcode",
                        "street",
                        "number",
                        "complement",
                        "district",
                        "city",
                        "state",
                        "createdAt",
                        "updatedAt"
                      ],
                      "additionalProperties": false,
                      "nullable": true
                    }
                  },
                  "required": [
                    "name",
                    "email",
                    "document",
                    "phone",
                    "address"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transaction.purchase": {
      "post": {
        "operationId": "transaction-purchase",
        "summary": "Create one purchase request",
        "tags": [
          "transaction"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "cpf": {
                    "type": "string",
                    "pattern": "^\\d{11}$"
                  },
                  "phone": {
                    "type": "string",
                    "pattern": "^\\d{8,12}$"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "PIX",
                      "CREDIT_CARD",
                      "BILLET"
                    ]
                  },
                  "creditCard": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string"
                          },
                          "installments": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "number": {
                            "type": "string",
                            "nullable": true
                          },
                          "holder_name": {
                            "type": "string",
                            "nullable": true
                          },
                          "cvv": {
                            "type": "string",
                            "nullable": true
                          },
                          "expiration_month": {
                            "type": "string",
                            "nullable": true
                          },
                          "expiration_year": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "token",
                          "installments"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "not": {

                        }
                      }
                    ]
                  },
                  "cep": {
                    "type": "string",
                    "nullable": true
                  },
                  "complement": {
                    "type": "string",
                    "nullable": true
                  },
                  "number": {
                    "type": "string",
                    "nullable": true
                  },
                  "street": {
                    "type": "string",
                    "nullable": true
                  },
                  "district": {
                    "type": "string",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "nullable": true
                  },
                  "state": {
                    "type": "string",
                    "nullable": true
                  },
                  "utmQuery": {
                    "type": "string",
                    "nullable": true
                  },
                  "checkoutUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "referrerUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "externalId": {
                    "type": "string",
                    "nullable": true
                  },
                  "postbackUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "fingerPrints": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "provider",
                        "value"
                      ],
                      "additionalProperties": false
                    },
                    "nullable": true
                  },
                  "amount": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 500
                  },
                  "traceable": {
                    "type": "boolean"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "unitPrice": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "title": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number",
                          "exclusiveMinimum": true,
                          "minimum": 0
                        },
                        "tangible": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "unitPrice",
                        "title",
                        "quantity",
                        "tangible"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "required": [
                  "name",
                  "email",
                  "cpf",
                  "phone",
                  "paymentMethod",
                  "amount",
                  "traceable",
                  "items"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "customId": {
                      "type": "string"
                    },
                    "installments": {
                      "type": "number",
                      "nullable": true
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "dueAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "approvedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "refundedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "rejectedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "chargebackAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "availableAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "pixQrCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "pixCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "billetUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "billetCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string",
                      "nullable": true
                    },
                    "district": {
                      "type": "string",
                      "nullable": true
                    },
                    "number": {
                      "type": "string",
                      "nullable": true
                    },
                    "complement": {
                      "type": "string",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "state": {
                      "type": "string",
                      "nullable": true
                    },
                    "zipCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "amount": {
                      "type": "number"
                    },
                    "taxSeller": {
                      "type": "number"
                    },
                    "taxPlatform": {
                      "type": "number"
                    },
                    "amountSeller": {
                      "type": "number"
                    },
                    "amountGarantee": {
                      "type": "number"
                    },
                    "taxGarantee": {
                      "type": "number"
                    },
                    "traceable": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "method": {
                      "type": "string"
                    },
                    "deliveryStatus": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "utmQuery": {
                      "type": "string",
                      "nullable": true
                    },
                    "checkoutUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "referrerUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "externalId": {
                      "type": "string",
                      "nullable": true
                    },
                    "postbackUrl": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "customId",
                    "installments",
                    "expiresAt",
                    "dueAt",
                    "approvedAt",
                    "refundedAt",
                    "rejectedAt",
                    "chargebackAt",
                    "availableAt",
                    "pixQrCode",
                    "pixCode",
                    "billetUrl",
                    "billetCode",
                    "status",
                    "address",
                    "district",
                    "number",
                    "complement",
                    "city",
                    "state",
                    "zipCode",
                    "amount",
                    "taxSeller",
                    "taxPlatform",
                    "amountSeller",
                    "amountGarantee",
                    "taxGarantee",
                    "traceable",
                    "method",
                    "deliveryStatus",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false,
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transaction.getPaymentDetails": {
      "get": {
        "operationId": "transaction-getPayment",
        "summary": "Get the purchase request",
        "tags": [
          "transaction"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "APPROVED",
                        "REJECTED",
                        "REFUNDED",
                        "CHARGEBACK",
                        "CANCELED"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "PIX",
                        "BILLET",
                        "CREDIT_CARD"
                      ]
                    },
                    "billetCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "billetUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "pixCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "pixQrCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "customId": {
                      "type": "string"
                    },
                    "dueAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "installments": {
                      "type": "number",
                      "nullable": true
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "unitPrice": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "unitPrice",
                          "quantity",
                          "title"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpf": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "email",
                        "cpf",
                        "phone"
                      ],
                      "additionalProperties": false
                    },
                    "deliveryStatus": {
                      "type": "string",
                      "nullable": true
                    },
                    "trackingCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "amount",
                    "status",
                    "method",
                    "billetCode",
                    "billetUrl",
                    "pixCode",
                    "pixQrCode",
                    "customId",
                    "dueAt",
                    "expiresAt",
                    "installments",
                    "items",
                    "customer",
                    "deliveryStatus",
                    "trackingCode",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transaction.getPayment": {
      "get": {
        "operationId": "transaction-getPaymentStatus",
        "summary": "Get payment status only",
        "tags": [
          "transaction"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "APPROVED",
                        "REJECTED",
                        "REFUNDED",
                        "CHARGEBACK",
                        "CANCELED"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "PIX",
                        "BILLET",
                        "CREDIT_CARD"
                      ]
                    },
                    "customId": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "method",
                    "customId",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transaction.getPaymentsByCustomer": {
      "post": {
        "operationId": "transaction-getPaymentsByCustomer",
        "summary": "Get the purchase request",
        "tags": [
          "transaction"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "search": {
                    "type": "string"
                  }
                },
                "required": [
                  "search"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "PENDING",
                          "APPROVED",
                          "REJECTED",
                          "REFUNDED",
                          "CHARGEBACK",
                          "CANCELED"
                        ]
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "PIX",
                          "BILLET",
                          "CREDIT_CARD"
                        ]
                      },
                      "customId": {
                        "type": "string"
                      },
                      "customer": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string",
                            "nullable": true
                          },
                          "city": {
                            "type": "string",
                            "nullable": true
                          },
                          "number": {
                            "type": "string",
                            "nullable": true
                          },
                          "street": {
                            "type": "string",
                            "nullable": true
                          },
                          "cep": {
                            "type": "string",
                            "nullable": true
                          },
                          "district": {
                            "type": "string",
                            "nullable": true
                          },
                          "complement": {
                            "type": "string",
                            "nullable": true
                          },
                          "cpf": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "name",
                          "email",
                          "phone",
                          "state",
                          "city",
                          "number",
                          "street",
                          "cep",
                          "district",
                          "complement",
                          "cpf"
                        ],
                        "additionalProperties": false
                      },
                      "deliveryStatus": {
                        "type": "string",
                        "nullable": true
                      },
                      "trackingCode": {
                        "type": "string",
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "approvedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      }
                    },
                    "required": [
                      "id",
                      "amount",
                      "status",
                      "method",
                      "customId",
                      "customer",
                      "deliveryStatus",
                      "trackingCode",
                      "createdAt",
                      "approvedAt"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transaction.updateDeliveryStatus": {
      "post": {
        "operationId": "transaction-updateDeliveryStatus",
        "summary": "Update delivery status",
        "tags": [
          "transaction"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "WAITING",
                      "IN_TRANSIT",
                      "DELIVERED"
                    ]
                  },
                  "trackingCode": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "paymentId",
                  "status",
                  "trackingCode"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/transaction.createCardToken": {
      "post": {
        "operationId": "transaction-createCardToken",
        "summary": "Create token card",
        "tags": [
          "transaction"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cardNumber": {
                    "type": "string"
                  },
                  "cardCvv": {
                    "type": "string"
                  },
                  "cardExpirationMonth": {
                    "type": "string",
                    "maxLength": 2
                  },
                  "cardExpirationYear": {
                    "type": "string",
                    "maxLength": 2
                  },
                  "holderName": {
                    "type": "string"
                  },
                  "holderDocument": {
                    "type": "string"
                  }
                },
                "required": [
                  "cardNumber",
                  "cardCvv",
                  "cardExpirationMonth",
                  "cardExpirationYear",
                  "holderName",
                  "holderDocument"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.createBankAccount": {
      "post": {
        "operationId": "withdraw-createBankAccount",
        "summary": "Create a bank account",
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bankCode": {
                    "type": "string",
                    "maxLength": 5
                  },
                  "branchNumber": {
                    "type": "string",
                    "maxLength": 4
                  },
                  "branchCheckDigit": {
                    "type": "string",
                    "maxLength": 1
                  },
                  "accountNumber": {
                    "type": "string",
                    "maxLength": 13
                  },
                  "accountCheckDigit": {
                    "type": "string",
                    "maxLength": 2
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "checking",
                      "savings"
                    ],
                    "default": "checking"
                  },
                  "pixCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "bankCode",
                  "branchNumber",
                  "branchCheckDigit",
                  "accountNumber",
                  "accountCheckDigit"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "platformId": {
                      "type": "string"
                    },
                    "receiverId": {
                      "type": "string",
                      "nullable": true
                    },
                    "userId": {
                      "type": "string"
                    },
                    "deletedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "document": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "nullable": true
                    },
                    "paymentMode": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "platformId",
                    "receiverId",
                    "userId",
                    "deletedAt",
                    "name",
                    "email",
                    "document",
                    "type",
                    "paymentMode",
                    "status",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false,
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.updateBankAccount": {
      "post": {
        "operationId": "withdraw-updateBankAccount",
        "summary": "Update one bank account pix",
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bankAccountId": {
                    "type": "string"
                  },
                  "pixCode": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "bankAccountId",
                  "pixCode"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "not": {

                  },
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.deleteBankAccount": {
      "post": {
        "operationId": "withdraw-deleteBankAccount",
        "summary": "Delete the bank account",
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bankAccountId": {
                    "type": "string"
                  },
                  "bankAccountStatus": {
                    "type": "string"
                  }
                },
                "required": [
                  "bankAccountId",
                  "bankAccountStatus"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "not": {

                  },
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.getBankAccounts": {
      "get": {
        "operationId": "withdraw-getBankAccounts",
        "summary": "Get all bank accounts",
        "tags": [
          "withdraw"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array"
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "result",
                    "totalCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.getReceivers": {
      "get": {
        "operationId": "withdraw-getReceivers",
        "summary": "Get all receivers",
        "tags": [
          "withdraw"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bankAccount": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "holderName": {
                            "type": "string"
                          },
                          "holderType": {
                            "type": "string"
                          },
                          "holderDocument": {
                            "type": "string"
                          },
                          "bankCode": {
                            "type": "string"
                          },
                          "branchCode": {
                            "type": "string"
                          },
                          "branchCheckDigit": {
                            "type": "string"
                          },
                          "accountNumber": {
                            "type": "string"
                          },
                          "accountCheckDigit": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "pixCode": {
                            "type": "string",
                            "nullable": true
                          },
                          "receiverId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "holderName",
                          "holderType",
                          "holderDocument",
                          "bankCode",
                          "branchCode",
                          "branchCheckDigit",
                          "accountNumber",
                          "accountCheckDigit",
                          "type",
                          "pixCode",
                          "receiverId",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false,
                        "nullable": true
                      }
                    },
                    "required": [
                      "bankAccount"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.getWithdraws": {
      "get": {
        "operationId": "withdraw-getWithdraws",
        "summary": "Get all withdraws",
        "tags": [
          "withdraw"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalWithdraw": {
                      "type": "number"
                    },
                    "feeWithdrawPaid": {
                      "type": "number"
                    },
                    "result": {
                      "type": "array"
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "totalWithdraw",
                    "feeWithdrawPaid",
                    "result",
                    "totalCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.requestWithdraw": {
      "post": {
        "operationId": "withdraw-requestWithdraw",
        "summary": "Create a withdraw request",
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "minimum": 10
                  },
                  "bankAccountId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "TED",
                      "PIX"
                    ]
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "bankAccountId",
                  "type",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "receiverId": {
                      "type": "string"
                    },
                    "withdrawId": {
                      "type": "string",
                      "nullable": true
                    },
                    "amount": {
                      "type": "number"
                    },
                    "withdrawFee": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "TED",
                        "PIX"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "APPROVED",
                        "REJECTED",
                        "CANCELED"
                      ]
                    },
                    "approvedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "rejectedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "rejectReason": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "receiverId",
                    "withdrawId",
                    "amount",
                    "withdrawFee",
                    "type",
                    "status",
                    "approvedAt",
                    "rejectedAt",
                    "rejectReason",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.getBalance": {
      "get": {
        "operationId": "withdraw-getBalance",
        "summary": "Get the withdraws balance",
        "tags": [
          "withdraw"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "availableBalance": {
                      "type": "number"
                    },
                    "pendingBalance": {
                      "type": "number"
                    },
                    "transferredBalance": {
                      "type": "number"
                    },
                    "garanteeBalance": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "availableBalance",
                    "pendingBalance",
                    "transferredBalance",
                    "garanteeBalance"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.apiWithdraw": {
      "post": {
        "operationId": "withdraw-apiWithdraw",
        "summary": "Make a withdraw",
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "minimum": 10
                  },
                  "pixCode": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "document": {
                    "type": "string",
                    "pattern": "^\\d{11,14}$"
                  },
                  "documentType": {
                    "type": "string",
                    "enum": [
                      "CPF",
                      "CNPJ"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "pixCode",
                  "document",
                  "documentType",
                  "email",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003Csecret key\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "amount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/withdraw.requestWithdrawExternal": {
      "post": {
        "operationId": "withdraw-requestWithdrawExternal",
        "summary": "Make a withdraw",
        "tags": [
          "withdraw"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "bankAccountId": {
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "bankAccountId"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003Csecret key\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "bankAccountId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "amount",
                    "bankAccountId"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sales.getStatistics": {
      "get": {
        "operationId": "sales-getStatistics",
        "summary": "Get sales statistics",
        "tags": [
          "sales"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PIX",
                "BILLET",
                "CREDIT_CARD"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "APPROVED",
                "REJECTED",
                "REFUNDED",
                "CHARGEBACK"
              ]
            }
          },
          {
            "name": "utmQuery",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalRevenue": {
                      "type": "number",
                      "nullable": true
                    },
                    "netProfit": {
                      "type": "number",
                      "nullable": true
                    },
                    "totalSales": {
                      "type": "number"
                    },
                    "salesBillet": {
                      "type": "number"
                    },
                    "salesCreditCard": {
                      "type": "number"
                    },
                    "conversionRate": {
                      "type": "number"
                    },
                    "salesApproved": {
                      "type": "number"
                    },
                    "amountPixSales": {
                      "type": "number"
                    },
                    "amountCreditCardSales": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "totalRevenue",
                    "netProfit",
                    "totalSales",
                    "salesBillet",
                    "salesCreditCard",
                    "conversionRate",
                    "salesApproved",
                    "amountPixSales",
                    "amountCreditCardSales"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sales.getPayments": {
      "get": {
        "operationId": "sales-getPayments",
        "summary": "Get all payments",
        "tags": [
          "sales"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PIX",
                "BILLET",
                "CREDIT_CARD"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "APPROVED",
                "REJECTED",
                "REFUNDED",
                "CHARGEBACK"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "not": {

                  }
                },
                {
                  "type": "number"
                }
              ],
              "default": 10
            }
          },
          {
            "name": "utmQuery",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalCount": {
                      "type": "number"
                    },
                    "result": {
                      "type": "array"
                    }
                  },
                  "required": [
                    "totalCount",
                    "result"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/sales.getPayment": {
      "get": {
        "operationId": "sales-getPayment",
        "summary": "Get payment by customId",
        "tags": [
          "sales"
        ],
        "parameters": [
          {
            "name": "customId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payment": {

                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/refunds.getStatistics": {
      "get": {
        "operationId": "refunds-getStatistics",
        "summary": "Get refunds statistics",
        "tags": [
          "refunds"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "inLastDays",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countRefounds": {
                      "type": "number"
                    },
                    "countPayments": {
                      "type": "number"
                    },
                    "totalRefunded": {
                      "type": "object",
                      "properties": {
                        "_sum": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number",
                              "nullable": true
                            }
                          },
                          "required": [
                            "amount"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "_sum"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "countRefounds",
                    "countPayments",
                    "totalRefunded"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/refunds.getRefoundRequests": {
      "get": {
        "operationId": "refunds-getRefoundRequests",
        "summary": "Get refunds requests statistics",
        "tags": [
          "refunds"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "inLastDays",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "paymentId": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "reason": {
                            "type": "string"
                          },
                          "refoundId": {
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "REJECTED",
                              "APPROVED",
                              "CANCELED",
                              "PENDING"
                            ]
                          },
                          "payment": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number"
                              },
                              "approvedAt": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "customId": {
                                "type": "string"
                              },
                              "customer": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "email"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "amount",
                              "approvedAt",
                              "customId",
                              "customer"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "id",
                          "paymentId",
                          "amount",
                          "reason",
                          "refoundId",
                          "createdAt",
                          "updatedAt",
                          "status",
                          "payment"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "result",
                    "totalCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/refunds.getAllRefoundRequests": {
      "get": {
        "operationId": "refunds-getAllRefoundRequests",
        "summary": "Get all refunds requests",
        "tags": [
          "refunds"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "inLastDays",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number"
                          },
                          "approvedAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "refundedAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "chargebackAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "customId": {
                            "type": "string"
                          },
                          "customer": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "email"
                            ],
                            "additionalProperties": false
                          },
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "REFUNDED",
                              "CHARGEBACK",
                              "PENDING",
                              "APPROVED",
                              "REJECTED",
                              "CANCELED"
                            ]
                          }
                        },
                        "required": [
                          "amount",
                          "approvedAt",
                          "refundedAt",
                          "chargebackAt",
                          "customId",
                          "customer",
                          "id",
                          "createdAt",
                          "updatedAt",
                          "status"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "result",
                    "totalCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/refunds.approveRefoundRequest": {
      "post": {
        "operationId": "refunds-approveRefoundRequest",
        "summary": "Approve one refund request",
        "tags": [
          "refunds"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refoundRequest": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "paymentId": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "refoundId": {
                          "type": "string",
                          "nullable": true
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "APPROVED",
                            "REJECTED",
                            "CANCELED"
                          ]
                        },
                        "approvedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "rejectedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "rejectedReason": {
                          "type": "string",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "id",
                        "paymentId",
                        "amount",
                        "reason",
                        "refoundId",
                        "status",
                        "approvedAt",
                        "rejectedAt",
                        "rejectedReason",
                        "createdAt",
                        "updatedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "refoundRequest"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/refunds.rejectRefoundRequest": {
      "post": {
        "operationId": "refunds-rejectRefoundRequest",
        "summary": "Reject one refund request",
        "tags": [
          "refunds"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "rejectedReason": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "rejectedReason"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refoundRequest": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "paymentId": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "refoundId": {
                          "type": "string",
                          "nullable": true
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "APPROVED",
                            "REJECTED",
                            "CANCELED"
                          ]
                        },
                        "approvedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "rejectedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "rejectedReason": {
                          "type": "string",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "id",
                        "paymentId",
                        "amount",
                        "reason",
                        "refoundId",
                        "status",
                        "approvedAt",
                        "rejectedAt",
                        "rejectedReason",
                        "createdAt",
                        "updatedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "refoundRequest"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/refunds.requestRefound": {
      "post": {
        "operationId": "refunds-requestRefound",
        "summary": "Create one refund request",
        "tags": [
          "refunds"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "customTransactionId": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "customTransactionId",
                  "reason"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refoundRequest": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "APPROVED",
                            "REJECTED",
                            "CANCELED"
                          ]
                        },
                        "approvedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "rejectedAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "rejectedReason": {
                          "type": "string",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "id",
                        "amount",
                        "reason",
                        "status",
                        "approvedAt",
                        "rejectedAt",
                        "rejectedReason",
                        "createdAt",
                        "updatedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "refoundRequest"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/relatories.getStatistics": {
      "get": {
        "operationId": "relatories-getStatistics",
        "summary": "Get relatories statistics",
        "tags": [
          "relatories"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PIX",
                "BILLET",
                "CREDIT_CARD"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "APPROVED",
                "REJECTED",
                "REFUNDED",
                "CHARGEBACK"
              ]
            }
          },
          {
            "name": "utmQuery",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "grossProfit": {
                      "type": "number",
                      "nullable": true
                    },
                    "netProfit": {
                      "type": "number",
                      "nullable": true
                    }
                  },
                  "required": [
                    "grossProfit",
                    "netProfit"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/relatories.getAllPayment": {
      "get": {
        "operationId": "relatories-getAllPayment",
        "summary": "Get all payments relatories",
        "tags": [
          "relatories"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/relatories.getPayments": {
      "get": {
        "operationId": "relatories-getPayments",
        "summary": "Get one payment",
        "tags": [
          "relatories"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PIX",
                "BILLET",
                "CREDIT_CARD"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "APPROVED",
                "REJECTED",
                "REFUNDED",
                "CHARGEBACK"
              ]
            }
          },
          {
            "name": "utmQuery",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "not": {

                  }
                },
                {
                  "type": "number"
                }
              ],
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array"
                    },
                    "methodStatics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "result",
                    "methodStatics",
                    "totalCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/customer.getPurchases": {
      "get": {
        "operationId": "customer-getPurchases",
        "summary": "Get platform purchases",
        "tags": [
          "customer"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "customId",
                          "createdAt"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "result",
                    "totalCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/admin.createSellerApiKey": {
      "post": {
        "operationId": "admin-createSellerApiKey",
        "summary": "create one seller API key.",
        "tags": [
          "admin"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "sellerId": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "sellerId"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/admin.listSellersApiKeys": {
      "get": {
        "operationId": "admin-listSellersApiKeys",
        "summary": "List sellers API token.",
        "tags": [
          "admin"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "secretKey": {
                        "type": "string"
                      },
                      "publicKey": {
                        "type": "string"
                      },
                      "userId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "secretKey",
                      "publicKey",
                      "userId",
                      "createdAt",
                      "updatedAt"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/admin.deleteSellerApiKey": {
      "post": {
        "operationId": "admin-deleteSellerApiKey",
        "summary": "Delete one seller API token.",
        "tags": [
          "admin"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/webhook.create": {
      "post": {
        "operationId": "webhook-create",
        "summary": "Create one webhook integration",
        "tags": [
          "webhook"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "callbackUrl": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "onBuyApproved": {
                    "type": "boolean"
                  },
                  "onRefound": {
                    "type": "boolean"
                  },
                  "onChargeback": {
                    "type": "boolean"
                  },
                  "onPixCreated": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "callbackUrl",
                  "name",
                  "onBuyApproved",
                  "onRefound",
                  "onChargeback",
                  "onPixCreated"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/webhook.getWebhooks": {
      "get": {
        "operationId": "webhook-getWebhooks",
        "summary": "Return all the user webhooks",
        "tags": [
          "webhook"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "callbackUrl": {
                            "type": "string"
                          },
                          "userId": {
                            "type": "string"
                          },
                          "onBuyApproved": {
                            "type": "boolean"
                          },
                          "onRefound": {
                            "type": "boolean"
                          },
                          "onChargeback": {
                            "type": "boolean"
                          },
                          "onPixCreated": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "callbackUrl",
                          "userId",
                          "onBuyApproved",
                          "onRefound",
                          "onChargeback",
                          "onPixCreated",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "totalCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "result",
                    "totalCount"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/webhook.deleteWebhook": {
      "post": {
        "operationId": "webhook-deleteWebhook",
        "summary": "Delete the webhook",
        "tags": [
          "webhook"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/webhook.tryPostback": {
      "post": {
        "operationId": "webhook-tryPostback",
        "summary": "Test webhook",
        "tags": [
          "webhook"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "callbackUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "callbackUrl"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "example": "\u003CsecretKey\u003E",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "error": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "issues": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "additionalProperties": false
                  }
                }
              },
              "required": [
                "message",
                "code"
              ],
              "additionalProperties": false
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "auth"
    },
    {
      "name": "customer"
    },
    {
      "name": "transaction"
    },
    {
      "name": "refunds"
    },
    {
      "name": "relatories"
    },
    {
      "name": "sales"
    },
    {
      "name": "user"
    },
    {
      "name": "withdraw"
    },
    {
      "name": "webhook"
    }
  ],
  "externalDocs": {
    "url": "https://app.for4payments.com.br/docs"
  }
}